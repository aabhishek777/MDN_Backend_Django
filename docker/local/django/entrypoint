#!/bin/bash

set -o errexit        # Set to exit immediately if a command exits with a non-zero status
set -o pipefail       # Return the exit status of the last command in a pipeline
set -o nounset        # Treat unset variables as an error

if [ -z "${POSTGRES_USER}" ]; then 
    base_postgres_image_default_user='postgres'
    export POSTGRES_USER="${base_postgres_image_default_user}" 
fi

export POSTGRES_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"  # Removed space after '=' for consistency

python << END
import sys
import time
import psycopg2

suggest_unrecoverable_after=30
start=time.time()

while True:
    try:
        psycopg2.connect(
            dbname="${POSTGRES_DB}",         # Replaced ':' with '=' for keyword arguments
            user="${POSTGRES_USER}",
            password="${POSTGRES_PASSWORD}",
            host="${POSTGRES_HOST}",
            port="${POSTGRES_PORT}"
        )
        break
    except psycopg2.OperationalError as error:     # Corrected typo in psycopg2.OperationalError
        sys.stderr.write("Waiting for PostgreSQL to become available...\n")
        if (time.time() - start > suggest_unrecoverable_after):
            sys.stderr.write("Taking longer than expected. Error: '{}'\n".format(error))
    time.sleep(1)  # Aligned with the while loop for clarity

END

>&2 echo "PostgreSQL is available"

exec "$@"
